agent:
  name: "e2e_test_generation_openshift_private"
  display_name: "OpenShift Tests Private E2E Generator"
  description: "Independent workflow: Generate E2E test code in openshift-tests-private repository based on existing test cases. Focuses on integration and end-to-end testing."

role:
  title: "OpenShift Private E2E Generator"
  focus: "Integration testing and end-to-end workflows"

task:
  primary_goal: "Generate E2E tests in openshift-tests-private repository"

  subtasks:
    - name: "OpenShift Tests Private Repository Setup"
      timeout: "40s"
      input_requirements: ["jira_issue_key", "requirements_input"]
      steps:
        - "Extract component name from test requirements output"
        - "Create temp_repos directory if it doesn't exist: mkdir -p temp_repos"
        - "Check if openshift-tests-private repository exists: temp_repos/openshift-tests-private/"
        - "cd into temp_repos/openshift-tests-private/"
        # Replace with your own repository
        - "If not exists: Clone https://github.com/openshift/openshift-tests-private.git to temp_repos/openshift-tests-private/"
        - "Check git status and branch"
        - "Switch to master branch: git checkout master"
        - "Fetch latest: git pull origin master (from openshift/openshift-tests-private)"
        - "Create or checkout branch: ai-case-design-{JIRA_KEY} from master branch"
        - "Ensure working directory is clean and ready"
      success_criteria:
        - "openshift-tests-private repository ready"
        - "Branch ai-case-design-{JIRA_KEY} ready for development"
        - "Repository is in clean state"

    - name: "Integration E2E Test Generation"
      timeout: "120s"
      input_requirements: ["requirements_input", "test_case_input", "jira_issue_key"]
      steps:
        # - "Load test case from Polarion, filter test case by jira issue key "
        - "Load and apply E2E generation rules from local directory: config/rules/e2e_rules/e2e_test_case_guidelines_test_private.md"
        - "Analyze existing E2E tests in openshift-tests-private to learn Ginkgo/Gomega patterns"
        - "Focus on end-to-end workflows and multi-component integration testing"
        - "Extract test scenarios suitable for integration E2E validation from test_case_input"
        - "Generate E2E test code following openshift-tests-private patterns"
        - "Write test file in test/extended/cluster_operator/{COMPONENT}/ following Ginkgo structure"
        - "Add AI authorship information: '// Auto-generated by AI Test Generation Assistant (OpenShift Private)' and '// JIRA: {JIRA_KEY}'"
        - "Include appropriate test selectors and metadata"
      success_criteria:
        - "Integration E2E test file created in openshift-tests-private"
        - "Test logic focuses on end-to-end workflows"

    - name: "OpenShift Private Validation"
      timeout: "60s"
      input_requirements: ["jira_issue_key", "requirements_input"]
      steps:
        - "Load validation commands from openshift-tests-private E2E rules"
        - "Run 'make all' to validate compilation and formatting"
        - "Check output for errors (syntax, imports, formatting)"
        - "If errors detected:"
        - "  Attempt to fix common issues (missing imports, formatting via go fmt)"
        - "  Re-run 'make all' to validate fixes"
        - "  If still failing, log errors for manual intervention"
      success_criteria:
        - "openshift-tests-private E2E tests compile and validate successfully"

input:
  required:
    - name: "jira_issue_key"
      type: "string"
      description: "JIRA issue key"
      example: "HIVE-2883"
    - name: "requirements_input"
      type: "file"
      description: "Test requirements"
      path: "workflow_outputs/{COMPONENT}/{JIRA_KEY}/phases/test_requirements_output.yaml"
    - name: "test_case_input"
      type: "file"
      description: "Test case scenarios for integration E2E analysis"
      path: "workflow_outputs/{COMPONENT}/{JIRA_KEY}/test_cases/{JIRA_KEY}_test_case.md"

output:
  files:
    - name: "{JIRA_KEY}_openshift_private_e2e_results.md"
      path: "workflow_outputs/{COMPONENT}/{JIRA_KEY}/phases/{JIRA_KEY}_openshift_private_e2e_results.md"
      format: "markdown"
      description: "OpenShift Tests Private E2E test generation results and repository integration status"
      template: "config/templates/test_cases_template.yaml"

tools:
  - name: "Git operations"
    description: "openshift-tests-private repository cloning, branching, and management"
    operations: ["git clone", "git checkout", "git merge", "git push"]
  - name: "File operations"
    description: "Read inputs, write integration E2E test files, and result documentation"
    operations: ["Read", "Write", "Glob", "Edit"]
  - name: "Build validation"
    description: "Run openshift-tests-private validation commands"
    operations: ["make all", "make verify"]
    
requires_mcp_tools: ["WebFetch", "Terminal"]

configuration:
  dynamic_variables:
    - "{COMPONENT}"
    - "{JIRA_KEY}"
  repository_management: true
  validation_required: true
  template_replacement: true
  repository_type: "openshift_tests_private"